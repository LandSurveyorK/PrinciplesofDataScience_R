plot(diff(diff(UnempRate,12)))
x = diff(diff(UnempRate,12))
acf2(x)
cat1 = sarima(UnempRate, 1, 1,1,0,1,1,12)
cat2 = sarima(UnempRate,2,1,1,0,1,1,12)
cat3 = sarima(UnempRate, 1,1,2,0,1,1,12)
c
c
sarima.for(UnempRate, 24,2,2,2,0,1,1,12) # is the forcast for 2 years ahead.
#(a)
acf2(diff(sales))
sarima(globtempl, 0, 1, 1)
sarima(globtempl, 0, 1, 1)
dog1 = sarima(globtempl, 0, 1, 1)
sarima(globtempl, 1, 1, 1)
dog2 = sarima(globtempl, 1, 1, 1)
sarima(globtempl, 0, 1, 2)
dog3 = sarima(globtempl, 0, 1, 2)
cbind(dog1$AIC, dog1$BIC)
cbind(dog2$AIC, dog2$BIC)
cbind(dog3$AIC, dog3$BIC)
sarima.for(globtempl, 10, 0, 1, 2) # to get forcasts for 3rd model.
acf2(diff(globtempl))
acf(diff(globtempl))
pacf(diff(globtempl))
sarima(globtempl, 0, 1, 1)
sarima.for(globtempl, 10, 0, 1, 2) # to get forcasts for 3rd model.
plot(sales)
plot(lead)
plot(diff(sales))
plot(diff(lead))
#(a)
acf2(diff(sales))
sarima(sales, 1,1,1,no.constant=TRUE)
#(b)
ccf(diff(sales), diff(lead))
lag2.plot(diff(lead),diff(sales),8)
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
acf2(resid(fit1))
(fit2 = sarima(ds,1,0,0, xreg = d13))
plot(resid(fit2$fit))
#(b)
ccf(diff(sales), diff(lead))
lag2.plot(diff(lead),diff(sales),8)
#(b)
ccf(diff(sales), diff(lead),log.max=3)
#(b)
ccf(diff(sales), diff(lead))
#(b)
ccf(diff(sales), diff(lead))
lag2.plot(diff(lead),diff(sales),8)
#(b)
ccf(diff(sales), diff(lead))
#(b)
ccf( diff(lead),diff(sales))
(fit2 = sarima(ds,1,0,0, xreg = d13))
acf2(resid(fit2$fit))
#(b)
ccf( lead,sales)
ccf(diff(sales), diff(lead))
#(a)
acf2(diff(sales))
acf(diff(diff(sles)))
acf(diff(diff(sales)))
acf2(diff(diff(sales)))
#(a)
acf2(diff(sales))
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
acf2(resid(fit1))
lag2.plot(diff(lead),diff(sales),8)
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
acf2(resid(fit1))
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
acf2(resid(fit1))
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
acf2(resid(fit1))
ccf(diff(sales), diff(lead))
lag2.plot(diff(lead),diff(sales),8)
#(a)
acf2(diff(sales))
(fit2 = sarima(ds,1,0,0, xreg = d13))
(fit1 = lm(ds~d13))
acf2(resid(fit2$fit))
acf2(resid(fit1))
(fit2 = sarima(ds,1,0,0, xreg = d13))
(fit2 = sarima(ds,1,0,0, xreg = d13))
acf2(diff(sales))
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
u = ts.intersect(diff(sales), lag(diff(lead), 3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
u = ts.intersect(diff(sales), lag(diff(lead), -3) )
ds = u[,1]
d13 = u[,2]
(fit1 = lm(ds~d13))
lag2.plot(diff(lead),diff(sales),8)
arima(sales, 3,2,0)
sarima(sales, 3,2,0)
sarima(sale,1,2,0)
sarima(sales,1,2,0)
lag2.plot(diff(sales),diff(lead),8)
(fit2 = sarima(ds,1,0,0, xreg = d13))
(fit2 = sarima(ds,1,0,0, xreg = d13))
plot(UnempRate)
plot(UnempRate)
plot(diff(UnempRate, 12))
plot(diff(diff(UnempRate,12)))
x = diff(diff(UnempRate,12))
acf2(x)
cat1 = sarima(UnempRate, 1, 1,1,0,1,1,12)
x = diff(diff(UnempRate,12))
acf2(x)
sarima.for(UnempRate, 24,2,2,2,0,1,1,12) # is the forcast
acf2(x)
cat1 = sarima(UnempRate, 1, 1,1,0,1,1,12)
cat2 = sarima(UnempRate,2,1,1,0,1,1,12)
cat3 = sarima(UnempRate, 1,1,2,0,1,1,12)
cat3 = sarima(UnempRate, 2,1,2,0,1,1,12)
sarima(UnempRate, 2,1,2,0,1,1,12)
sarima.for(UnempRate, 24,2,1,1,0,1,1,12)
sarima.for(UnempRate, 24,2,2,1,0,1,1,12) # is the forcast for 2 years ahead.
acf2(diff(globtempl))
sarima.for(UnempRate, 24,2,1,1,0,1,1,12) # is th
mvspec( sunspotz, tape = 0, log = "no" )
abline(v = 3/240, lty = "dashed")
abline(v = 22/240, lty = "dashed")
x$feq
x =mvspec( sunspotz, tape = 0, log = "no" )
x$freq
x$spec
length(x)
length(sunsptz)
length(sunspotz)
mvspec(sunspotz, spans = c(5,5), taper = .5, log = 'no')
abline(v = c(3/240, 22/240), lty = 2)
dog <- spec.ar(sunspotz, log = 'no')
cbind(dog$freq, dog$spec)[1:10,]
which.max(x$spec)
which.max(x$spec[1:15])
1/ x$freq[3]
1/x$freq[22]
x =mvspec( sunspotz, tape = 0, log = "no" )
dog <- spec.ar(sunspotz, log = 'no')
x =mvspec( sunspotz, tape = 0, log = "no" )
plot(sunspotz)
dog <- spec.ar(sunspotz, log = 'no')
cbind(dog$freq, dog$spec)[1:10,]
dog <- spec.ar(sunspotz, log = 'no')
dog <- spec.ar(sunspotz)
dog <- spec.ar(sunspotz,, log = 'no')
plot(sunspotz)
x =mvspec( sunspotz, tape = 0, log = "no" )
length(x)
length(x$freq)
plot(sunspotz[1:200])
x =mvspec( sunspotz, tape = 0, log = "no" )
length(x$freq)
plot(sunspotz[1:230])
x =mvspec( sunspotz, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:230]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:210]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:200]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:100]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:450]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:459]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:451]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
y = sunspotz[1:430]
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
mvspec(soi, log="no"); abline(v=1/4, lty="dotted")
mvspec(rec, log="no"); abline(v=1/4, lty="dotted")
plot(soi)
mvspec(soi, log="no"); abline(v=1/4, lty="dotted")
mvspec(rec, log="no"); abline(v=1/4, lty="dotted")
x = mvspec(soi, log="no"); abline(v=1/4, lty="dotted")
length(x$freq)
mvspec(rec, log="no"); abline(v=1/4, lty="dotted")
y = sunspotz
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
which.max(x$spec)
which.max(x$spec[1:15])
1/ x$freq[3]
1/x$freq[22]
x$freq
x$freq
x$freq
x = mvspec(soi, log="no"); abline(v=1/4, lty="dotted")
length(x$freq)
x$freq
plot(x$freq,x$spec)
x =mvspec( y, tape = 0, log = "no" )
1/ x$freq[3]
1/x$freq[22]
y = sunspotz
x =mvspec( y, tape = 0, log = "no" )
length(x$freq)
which.max(x$spec)
which.max(x$spec[1:15])
x$freq
1/ x$freq[3]
1/x$freq[22]
abline(v = 3/240, lty = "dashed")
abline(v = 22/240, lty = "dashed")
mvspec(sunspotz, spans = c(5,5), taper = .5, log = 'no')
abline(v = c(3/240, 22/240), lty = 2)
dog <- spec.ar(sunspotz,, log = 'no')
cbind(dog$freq, dog$spec)[1:10,]
sarima.for(globtempl, 10, 0, 1, 2) # to get forcasts for 3rd model.
-7
-7
pnorm((80.94-85)/(11.6/5))
pt(-(3)/(18/sqrt(40)))
pt(-(3)/(18/sqrt(40)),39)
pt(-(3)/(18/sqrt(40)),39)
-(3)/(18/sqrt(40))
pt(-(3)/(18/sqrt(40)),39)
94.39/(33+27+40)
94.39/(33+27+40) * 33
94.39/(33+27+40) * 27
94.39/(33+27+40) * 20
25.5/(32+24+34)
25.5/(32+24+34)*32
25.5/(32+24+34)*24
25.5/(32+24+34)*178
25.5/(32+24+34)*17
138.58/(29+17+20)
138.58/(29+17+20)*29
138.58/(32+24+17*2)
138.58/(32+24+17*2) *３２
138.58/(32+24+17*2) *32
138.58/(32+24+17*2)*24
138.58/(32+24+17*2)*17
25.5/(29+17+10*2)
25.5/(29+17+10*2)*29
25.5/(29+17+10*2)*17
25.5/(29+17+10*2)*10
86.72/4
31.14+49.27+11.20+21.68
25.48+36.95+5.56+21.68
18.87+26.17+3.86+21.68
18.87+26.17+3.86+21.68*2+89.67+113.29
113.29+89.67+70.58+70.58
-94.39-138.58-25.5-86.72
(18+60)/(96+123)
prop.test((18,60),(96,123))
prop.test(x = (18,60),n=(96,123))
prop.test(x = c(18,60),n=c(96,123))
(.487809-.1875)/sqrt( 0.3562*(- 0.3562)*(1/96+1/123)
)
(.487809-.1875)/sqrt( 0.3562*(1- 0.3562)*(1/96+1/123))
(.487809-.1875)/sqrt( 0.3562*(1- 0.3562)*(1/96+1/123))
ans
4.604813**2
prop.test(x = c(18,60),n=c(96,123))
(.487809-.1875)/sqrt( (18+60)/(96+123)*(1- (78/219))*(1/96+1/123))
4.604916**2
4.604916*4.604916
prop.test(x = c(18,60),n=c(96,123))
(96*78)/219
(96*133])/219
(96*133)/219
(123*133)/219
(123*78)/219
a1 = (96*78)/219
a21= (96*133)/219
a11= (96*78)/219
a12= (123*78)/219
a22= (123*133)/219
(18-a11)^2
2^2
(18-a11)^2/a11 + (60-a12)^2/a12 + (78-a21)^2/a21 + (63-a44)^2/a44
(18-a11)^2/a11 + (60-a12)^2/a12 + (78-a21)^2/a21 + (63-a22)^2/a22
4.604916*4.604916
a11
a12
a21
a22
(60/123-18/96)/sqrt( (18+60)/(96+123)*(1- (78/219))*(1/96+1/123))
4.604853^2
prop.test(x = c(18,60),n=c(96,123),correct = FALSE)
4.604853^2
(18-a11)^2/a11 + (60-a12)^2/a12 + (78-a21)^2/a21 + (63-a22)^2/a22
prop.test(x = c(18,60),n=c(96,123),correct = FALSE)
a12= (78*133)/219
a22=(123*141)/219
(18-a11)^2/a11 + (60-a12)^2/a12 + (78-a21)^2/a21 + (63-a22)^2/a22
install.packages('rmarkdown')
knitr::opts_chunk$set(echo = TRUE)
install.packages(reticular)
knitr::knit_engines$set(python=reticular::eng_python)
install.packages(reticulate)
knitr::knit_engines$set(python=reticulate::eng_python)
install.packages('reticulate')
knitr::knit_engines$set(python=reticulate::eng_python)
install.packages('reticulate')
knitr::knit_engines$set(python=reticulate::eng_python)
library(reticulate)
library(reticulate)
install.packages('reticulate')
install.packages('reticulate')
library(reticulate)
install.packages('reticulate')
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
version
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
```{python}
import numpy as np
import pandas as pd
a=[1,2,3]
a = a + [4]
print(a)
x = 3
y = 4
print('x:',x ,'y:',y)
```
```{python}
import numpy as np
import pandas as pd
a=[1,2,3]
a = a + [4]
print(a)
x = 3
y = 4
print('x:',x ,'y:',y)
```
install.packages('reticulate')
devtools::install_github('rstudio/reticulate')
devtools::install_github('rstudio/reticulate')
devtools::install_github('yihui/reticulate')
names(knitr::knitr_engines$get())
names(knitr::knit_engines$get())
install.packages('reticulate')
install.packages("reticulate")
install.packages(devtools)
install.packages('devtools')
install.packages("devtools")
install.packages("reticulate")
Sys.which(python)
Sys.which('python'')
''
Sys.which('python')
Sys.which('python')
Sys.which('python')
Sys.which('python')
jh
k=6
getwd()
setwd("C:/Users/WEI/s1291")
getwd()
a <- seq(from =1, to = 10, by =0.5)
a
b < -9:0
b <- -9:9
b
plot(a,b)
length(a)
length(b)
b2 <- b[2:6]
b2
plot(a , b2)
plot(a,b,xlab='X-axis', yalb='Y-Axis', main='Plot Ttile')
plot(a,b,xlab='X-axis', ylab='Y-Axis', main='Plot Title')
plot(a,b,xlab='X-axis', ylab='Y-Axis', main='Plot Title')
x <- seq(0,2*pi, 0.1)
y <- sin(x)
plot(x,y)
plot(x,y, type='l')
plot(x,y, type='b')
plot(x,y, type='p')
plot(x,y, type='b')
plot(x,y, type='l')
plot(x,y,type='l',xlab='x', ylab='y', main='Graph of sin(x)')
x <- 5
mode(x)
x <-TRUE
mode(x)
x <- 'Lucas Mentch'
mode(x)
x <- c(1,2,3,4,5)
x <- c('Lucas','Mentch')
mode(z)
mode(x)
z -paste(w,x,y)
w <- 'Lucas'
x <- 'k'
y <- 'Mentch'
z <-paste(w,x,y)
z
z <-paste(w,x,y,sep='.')
z
z <-paste(w,x,y,sep=',')
z
x <- '7'
x
mode(x)
x + 5
x <- as.numeric(x)
mode(x)
x + 5
newlist <- list('Lucas', x, y,z, 6,7,8)
newlist[3]
newlist
newlist[3]
newlist[[3]]
mode(newlist[3])
newlist[[3]][1]
newlist[3][1]
names(newlist) <-c('Lucas','x','y','z','six','seven','eight')
newlist$x
newlist$Lucas
height.in <-c(72,73,66,68,76.62,60)
weight.in <-c(180,185,170,169,180,200,150)
size.dat <- data.frame('height'=height.in, 'weight'=weight.in)
height.in <-c(72,73,66,68,76,62,60)
size.dat <- data.frame('height'=height.in, 'weight'=weight.in)
size.dat
class(size.dat)
mode(size.dat)
x = 4
class(x)
x =TRUE
class(x)
x <- c(1,2,3)
class(x)
mode(size.dat)
clss(size.dat)
size.dat$height
size.data[,1]
size.dat[,1]
size.dat[2,]
library(MASS)
data()
?trees
data(trees)
trees
head(tree)
head(trees)
head(trees,10)
tail(trees)
tail(trees,5)
dim(trees)
names(trees)
tree$Girth
trees$Girth
trees$Volume
attach(trees)
Girth
Volume
mode(Girth)
detach(trees)
Girth
install.packages('NHANES')
library(NHANES)
?NHANES
install.packages('mdsr')
install.packages('mosaic')
getwd()
RobbinData <- read.table(file='RobbinData.txt', header=TRUE, sep=',')
RobbinData <- read.table(file='RobbinData.txt', header=TRUE, sep=',')
names(RobbinData)
head(RobbinData)
max(RobbinData$DayCollected)
max(RobbinData$TimeCollected)
max(RobbinData$DayCollected)
RobbinData$MonthCollected[RobbinData$YearCollected==2004]
a <- RobbinData[2:3]
a
x <- RobbinData[c('Latittude','Longitude')]
x <- RobbinData[c('Latitude','Longitude')]
x
class(x)
is.data.frame(x)
Robbin
RobbinData[1:3,2:3]
